{"version":3,"file":"static/js/690.3de25bc2.chunk.js","mappings":"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","sources":["Components/Paginater.jsx","Components/UserInfoTable.jsx","Components/RechargeHistory.jsx","Components/ExpenseHistory.jsx","Components/HomePage.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"../CSS/Paginater.css\";\r\nfunction Paginater({ totalElements, pageSize, handlePageChange, isVisible }) {\r\n  const [isMedia, setIsMedia] = useState(false);\r\n  const handleMediaScreen = () => {\r\n    if (window.innerWidth <= 1200) {\r\n      setIsMedia(true);\r\n    } else {\r\n      setIsMedia(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleMediaScreen);\r\n    handleMediaScreen();\r\n    return () => window.removeEventListener(\"resize\", handleMediaScreen);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <ReactPaginate\r\n        previousLabel={\"Previous\"}\r\n        nextLabel={\"Next\"}\r\n        breakLabel={\"...\"}\r\n        pageCount={Math.ceil(totalElements / pageSize)}\r\n        marginPagesDisplayed={2}\r\n        pageRangeDisplayed={2}\r\n        onPageChange={handlePageChange}\r\n        containerClassName={` pagination-container ${\r\n          isMedia ? `media-screen` : ``\r\n        } ${!isVisible ? `hide` : ``}`}\r\n        activeClassName=\"page-active\"\r\n        pageClassName=\"page-btn\"\r\n        pageLinkClassName=\"page-btn-link\"\r\n        previousClassName=\"page-next-btn\"\r\n        nextClassName=\"page-prev-btn\"\r\n        previousLinkClassName=\"page-next-btn-link\"\r\n        nextLinkClassName=\"page-next-btn-link\"\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Paginater;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Paginater from \"./Paginater\";\r\nimport PageLoader from \"./PageLoader\";\r\nimport \"../CSS/UserInfoTable.css\";\r\nimport \"../CSS/RetryForm.css\";\r\nlet abortControllers = [];\r\nfunction UserInfoTable({\r\n  adminUserName,\r\n  isSearchLoading,\r\n  searchData,\r\n  searchRefresh,\r\n  initialRefresh,\r\n  inputClear,\r\n  isOverlay,\r\n  setIsOverlay,\r\n  reductionStatus,\r\n  setNavigation,\r\n  refreshUserInfoTable,\r\n  setRefreshUserInfoTable,\r\n  handleLogout,\r\n}) {\r\n  const navigate = useNavigate();\r\n  const [isTableLoading, setIsTableLoading] = useState(false);\r\n  const [networkError, setNetworkError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [pageData, setPageData] = useState([]);\r\n  const [pageSize] = useState(9);\r\n  const [presentPage, setPresentPage] = useState(0);\r\n  const [totalUsers, setTotalUsers] = useState(null);\r\n  const [isEditClicked, setIsEditClicked] = useState(false);\r\n  const [isRemoveClicked, setIsRemoveClicked] = useState(false);\r\n  const [editName, setEditName] = useState(\"\");\r\n  const [editRfid, setEditRfid] = useState(\"\");\r\n  const [editRollNumber, setEditRollNumber] = useState(\"\");\r\n  const [editIndex, setEditIndex] = useState(null);\r\n  const [editData, setEditData] = useState({\r\n    admin: \"\",\r\n    rfid: \"\",\r\n    name: \"\",\r\n    rollNumber: \"\",\r\n    password: \"\",\r\n  });\r\n  const [isEditSubmited, setIsEditSubmited] = useState(false);\r\n  const [isEditValidated, setIsEditValidated] = useState(false);\r\n  const [editError, setEditError] = useState({});\r\n  const [removeFormData, setRemoveFormData] = useState(\"\");\r\n  const [isRemoveSubmited, setIsRemoveSubmited] = useState(false);\r\n  const [isRemoveFormValidated, setIsRemoveFormValidated] = useState(false);\r\n  const [removeFormError, setRemoveFormError] = useState({});\r\n  const [removeRfid, setRemoveRfid] = useState(\"\");\r\n  const [vissibility, setVissibility] = useState(false);\r\n  const [formLoading, setFormLoading] = useState(false);\r\n  const editFormRef = useRef(null);\r\n  const removeFormRef = useRef(null);\r\n  const removeFormInputRef = useRef(null);\r\n  const editPasswordRef = useRef(null);\r\n  const fetchPageData = async (pageNumber, totalCount) => {\r\n    try {\r\n      setIsTableLoading(true);\r\n      setNetworkError(false);\r\n      abortControllers.forEach((signal) => {\r\n        signal.abort();\r\n      });\r\n      const abortController = new AbortController();\r\n      if (!totalCount) {\r\n        abortControllers.push(abortController);\r\n      }\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/get_users?pageNumber=${pageNumber}&pageLimit=${pageSize}`,\r\n        {\r\n          credentials: \"include\",\r\n          signal: abortController.signal,\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      switch (response.status) {\r\n        case 200:\r\n          if (totalCount) {\r\n            setTotalUsers(data?.totalUsers);\r\n          }\r\n          abortControllers = [];\r\n          setPageData(data?.users);\r\n          break;\r\n        case 401:\r\n          await handleLogout();\r\n          abortControllers = [];\r\n          break;\r\n        default:\r\n          setErrorMessage(data.error + \"!\");\r\n          abortControllers = [];\r\n          setNetworkError(true);\r\n      }\r\n    } catch (error) {\r\n      if (error.name !== \"AbortError\") {\r\n        abortControllers = [];\r\n        setErrorMessage(\"oops something went wrong!\");\r\n        setNetworkError(true);\r\n      } else {\r\n        alert(error.message);\r\n      }\r\n    } finally {\r\n      if (abortControllers.length === 0) {\r\n        setIsTableLoading(false);\r\n      }\r\n    }\r\n  };\r\n  const handleRechargeHistory = (rfid) => {\r\n    setNavigation(2);\r\n    navigate(\"recharge_history\", {\r\n      state: { rfid },\r\n    });\r\n  };\r\n  const handleExpenseHistory = (rfid) => {\r\n    setNavigation(3);\r\n    navigate(\"expense_history\", {\r\n      state: { rfid },\r\n    });\r\n  };\r\n  const handleTablePageChange = (e) => {\r\n    fetchPageData(e.selected, false);\r\n    setPresentPage(e.selected);\r\n    inputClear(true);\r\n  };\r\n\r\n  const editValidater = () => {\r\n    const error = {};\r\n    if (!editData.rfid) {\r\n      error.rfidError = \"RFID required\";\r\n    }\r\n    if (!editData.name) {\r\n      error.nameError = \"Name required\";\r\n    }\r\n    if (!editData.rollNumber) {\r\n      error.rollNumberError = \"Roll Number Required\";\r\n    }\r\n    if (!editData.password) {\r\n      error.adminError = \"Admin Passowrd Required\";\r\n    }\r\n    setEditError(error);\r\n    return true;\r\n  };\r\n  const handleEditForm = (e, keyEvent) => {\r\n    if (!keyEvent) {\r\n      e.preventDefault();\r\n    }\r\n    setIsEditValidated(false);\r\n    if (!keyEvent) {\r\n      setEditData({\r\n        admin: adminUserName,\r\n        rfid: e.target[0].value,\r\n        name: e.target[1].value,\r\n        rollNumber: e.target[2].value,\r\n        password: e.target[3].value,\r\n      });\r\n    } else {\r\n      setEditData({\r\n        admin: adminUserName,\r\n        rfid: editFormRef.current[0].value,\r\n        name: editFormRef.current[1].value,\r\n        rollNumber: editFormRef.current[2].value,\r\n        password: editFormRef.current[3].value,\r\n      });\r\n    }\r\n    setIsEditSubmited(true);\r\n  };\r\n\r\n  const handleEdit = (index) => {\r\n    inputClear(true);\r\n    setIsEditClicked(true);\r\n    setEditIndex(index);\r\n    setEditError({});\r\n    setEditName(pageData[index]?.name);\r\n    setEditRfid(pageData[index]?.rfid);\r\n    setEditRollNumber(pageData[index]?.rollNumber);\r\n    editPasswordRef.current.value = \"\";\r\n    setIsOverlay(true);\r\n    setVissibility(false);\r\n  };\r\n  const handleEditInput = (e) => {\r\n    const { name, value } = e.target;\r\n    if (name === \"rfid\") {\r\n      setEditRfid(value);\r\n    }\r\n    if (name === \"name\") {\r\n      setEditName(value);\r\n    }\r\n    if (name === \"rollNumber\") {\r\n      setEditRollNumber(value);\r\n    }\r\n  };\r\n  const removeFormValidater = () => {\r\n    const error = {};\r\n    if (!removeFormData) {\r\n      error.adminError = \"Admin Password Required\";\r\n    }\r\n    setRemoveFormError(error);\r\n    return true;\r\n  };\r\n  const handleRemoveForm = (e, keyEvent) => {\r\n    if (!keyEvent) {\r\n      e.preventDefault();\r\n    }\r\n    setIsRemoveFormValidated(false);\r\n    if (!keyEvent) {\r\n      setRemoveFormData(e.target[0].value);\r\n    } else {\r\n      setRemoveFormData(removeFormRef.current[0].value);\r\n    }\r\n    setIsRemoveSubmited(true);\r\n  };\r\n  const handleRemove = (index) => {\r\n    inputClear(true);\r\n    setIsRemoveClicked(true);\r\n    setRemoveFormError({});\r\n    removeFormInputRef.current.value = \"\";\r\n    setRemoveRfid(pageData[index].rfid);\r\n    setIsOverlay(true);\r\n    setVissibility(false);\r\n  };\r\n  const handlePasswordVisibility = (elementRef) => {\r\n    setVissibility(!vissibility);\r\n    elementRef.current.type = vissibility ? `password` : `text`;\r\n  };\r\n  const handleEnterKey = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      if (isEditClicked) handleEditForm(editFormRef.current, true);\r\n      if (isRemoveClicked) handleRemoveForm(removeFormRef.current, true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleEnterKey);\r\n    return () => window.removeEventListener(\"keydown\", handleEnterKey);\r\n  });\r\n  useEffect(() => {\r\n    if (isEditValidated && Object.keys(editError).length === 0) {\r\n      (async () => {\r\n        try {\r\n          setFormLoading(true);\r\n          const response = await fetch(\r\n            `${process.env.REACT_APP_API_URL}/edit_user/${pageData[editIndex]._id}`,\r\n            {\r\n              method: \"PUT\",\r\n              credentials: \"include\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify(editData),\r\n            }\r\n          );\r\n          const data = await response.json();\r\n          switch (response.status) {\r\n            case 200:\r\n              setIsEditClicked(false);\r\n              fetchPageData(presentPage, false);\r\n              setIsOverlay(false);\r\n              break;\r\n            case 401:\r\n              await handleLogout();\r\n              break;\r\n            default:\r\n              setEditError({ serverMessage: data?.error });\r\n          }\r\n        } catch (error) {\r\n          alert(error.message);\r\n        } finally {\r\n          setFormLoading(false);\r\n        }\r\n      })();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isEditValidated]); //www.thunderclient.com/welcome\r\n  useEffect(() => {\r\n    if (isRemoveFormValidated && Object.keys(removeFormError).length === 0) {\r\n      (async () => {\r\n        try {\r\n          setFormLoading(true);\r\n          const response = await fetch(\r\n            `${process.env.REACT_APP_API_URL}/delete_user`,\r\n            {\r\n              method: \"POST\",\r\n              credentials: \"include\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n              },\r\n              body: JSON.stringify({\r\n                admin: adminUserName,\r\n                rfid: removeRfid,\r\n                password: removeFormData,\r\n              }),\r\n            }\r\n          );\r\n          const data = await response.json();\r\n          switch (response.status) {\r\n            case 200:\r\n              setIsRemoveClicked(false);\r\n              fetchPageData(presentPage, true);\r\n              setIsOverlay(false);\r\n              break;\r\n            case 401:\r\n              await handleLogout();\r\n              break;\r\n            default:\r\n              setRemoveFormError({ serverMessage: data?.error });\r\n          }\r\n        } catch (error) {\r\n          alert(error.message);\r\n        } finally {\r\n          setFormLoading(false);\r\n        }\r\n      })();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isRemoveFormValidated]);\r\n  useEffect(() => {\r\n    if (!isOverlay) {\r\n      setIsEditClicked(false);\r\n      setIsRemoveClicked(false);\r\n    }\r\n  }, [isOverlay]);\r\n  useEffect(() => {\r\n    if (isEditSubmited) {\r\n      setIsEditValidated(editValidater());\r\n      setIsEditSubmited(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isEditSubmited]);\r\n  useEffect(() => {\r\n    if (isRemoveSubmited) {\r\n      setIsRemoveFormValidated(removeFormValidater());\r\n      setIsRemoveSubmited(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isRemoveSubmited]);\r\n\r\n  useEffect(() => {\r\n    setPageData(searchData);\r\n  }, [searchData]);\r\n\r\n  useEffect(() => {\r\n    if (searchRefresh && !initialRefresh) {\r\n      fetchPageData(presentPage, false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchRefresh]);\r\n  useEffect(() => {\r\n    if (refreshUserInfoTable) {\r\n      setNetworkError(false);\r\n      setTotalUsers(null);\r\n      fetchPageData(0, true);\r\n      setRefreshUserInfoTable(false);\r\n    }\r\n  }, [refreshUserInfoTable]);\r\n  useEffect(() => {\r\n    setNavigation(1);\r\n    fetchPageData(0, true);\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"sub-table-sec\">\r\n        {networkError ? (\r\n          <div className=\"retry-form\">\r\n            <p>{errorMessage}</p>\r\n            <button\r\n              onClick={() => {\r\n                fetchPageData(0, true);\r\n              }}\r\n            >\r\n              Retry\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div\r\n              className={`empty-animation-container ${\r\n                totalUsers === 0 ||\r\n                (!searchRefresh && searchData.length === 0 && !isSearchLoading)\r\n                  ? ``\r\n                  : `hide`\r\n              }`}\r\n            >\r\n              <h1>{`${\r\n                !searchRefresh && searchData.length === 0 && !isSearchLoading\r\n                  ? `user not found!`\r\n                  : `oops table is empty!`\r\n              }`}</h1>\r\n            </div>\r\n            <table\r\n              className={`${\r\n                totalUsers === null || totalUsers === 0 ? `hide` : ``\r\n              }`}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th>SL. NO.</th>\r\n                  <th>RFID</th>\r\n                  <th>Student Name</th>\r\n                  <th>Roll Number</th>\r\n                  <th className={`${reductionStatus ? `hide` : ``}`}>\r\n                    Balance Amount\r\n                  </th>\r\n                  <th>Manage</th>\r\n                  <th>{reductionStatus ? `Recharge` : `View`} Details</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody\r\n                className={`${isTableLoading || isSearchLoading ? `hide` : ``}`}\r\n              >\r\n                {pageData?.map((user, index) => (\r\n                  <tr key={index + 1}>\r\n                    <td className=\"slno\">\r\n                      {presentPage * pageSize + (index + 1)}\r\n                    </td>\r\n                    <td>{user?.rfid}</td>\r\n                    <td style={{ textTransform: \"capitalize\" }}>\r\n                      {user?.name}\r\n                    </td>\r\n                    <td>{user?.rollNumber}</td>\r\n                    <td className={`${reductionStatus ? `hide` : ``}`}>\r\n                      {user?.balance}\r\n                    </td>\r\n                    <td className=\"manage-sec\">\r\n                      <button\r\n                        onClick={() => {\r\n                          handleEdit(index);\r\n                        }}\r\n                        className=\"edit-btn\"\r\n                      >\r\n                        <img src=\"/Icons/edit.png\" alt=\"\" />\r\n                      </button>\r\n                      <button\r\n                        onClick={() => {\r\n                          handleRemove(index);\r\n                        }}\r\n                        className=\"delete-btn\"\r\n                      >\r\n                        <img src=\"/Icons/remove.png\" alt=\"\" />\r\n                      </button>\r\n                    </td>\r\n                    <td className=\"view-details-sec\">\r\n                      <button\r\n                        onClick={() => {\r\n                          handleRechargeHistory(user?.rfid);\r\n                        }}\r\n                        className=\"recharge-history-btn\"\r\n                      >\r\n                        Recharge\r\n                      </button>\r\n                      <button\r\n                        onClick={() => {\r\n                          handleExpenseHistory(user?.rfid);\r\n                        }}\r\n                        className={`expense-history-btn ${\r\n                          reductionStatus ? `hide` : ``\r\n                        }`}\r\n                      >\r\n                        Expense\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </>\r\n        )}\r\n\r\n        <div\r\n          className={`table-loader-container ${\r\n            isTableLoading || isSearchLoading ? `` : `hide`\r\n          }`}\r\n        >\r\n          <PageLoader />\r\n        </div>\r\n      </div>\r\n      <div className=\"paginater-sec\">\r\n        <Paginater\r\n          totalElements={totalUsers}\r\n          pageSize={pageSize}\r\n          handlePageChange={handleTablePageChange}\r\n          isVisible={\r\n            searchRefresh &&\r\n            !networkError &&\r\n            totalUsers !== null &&\r\n            totalUsers !== 0\r\n          }\r\n        />\r\n      </div>\r\n      <form\r\n        className={`edit-form ${isEditClicked ? `open` : ``}`}\r\n        onSubmit={handleEditForm}\r\n        ref={editFormRef}\r\n      >\r\n        <div className={`form-overlay ${formLoading ? `open` : ``}`}></div>\r\n        <div className={`progress-bar ${formLoading ? `open` : ``}`}>\r\n          <div className=\"progress-bar-value\"></div>\r\n        </div>\r\n        <div className=\"heading-sec\">\r\n          <h1>Edit User </h1>\r\n        </div>\r\n        <p>{editError.rfidError}</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"rfid\"\r\n          value={editRfid}\r\n          onChange={handleEditInput}\r\n          placeholder=\"RFID Number\"\r\n        />\r\n        <p>{editError.nameError}</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={editName}\r\n          onChange={handleEditInput}\r\n          placeholder=\"Student Name\"\r\n          style={{ textTransform: \"capitalize\" }}\r\n        />\r\n        <p>{editError.rollNumberError}</p>\r\n        <input\r\n          type=\"text\"\r\n          name=\"rollNumber\"\r\n          value={editRollNumber}\r\n          onChange={handleEditInput}\r\n          placeholder=\"Roll Number\"\r\n          style={{ textTransform: \"uppercase\" }}\r\n        />\r\n        <p>{editError.adminError}</p>\r\n        <label>\r\n          <input\r\n            ref={editPasswordRef}\r\n            type=\"password\"\r\n            placeholder=\"Admin Password\"\r\n          />\r\n          <button\r\n            className=\"material-symbols-outlined\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handlePasswordVisibility(editPasswordRef);\r\n            }}\r\n          >\r\n            <img\r\n              src={`/Icons/${\r\n                vissibility ? `visibility.png` : `visibility_off.png`\r\n              }`}\r\n              alt=\"\"\r\n            />\r\n          </button>\r\n        </label>\r\n        <div className=\"form-footer-sec\">\r\n          <p>{editError?.serverMessage}</p>\r\n          <button type=\"submit\" className=\"save-btn\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n      <form\r\n        className={`remove-form ${isRemoveClicked ? `open` : ``}`}\r\n        onSubmit={handleRemoveForm}\r\n        ref={removeFormRef}\r\n      >\r\n        <div className={`form-overlay ${formLoading ? `open` : ``}`}></div>\r\n        <div className={`progress-bar ${formLoading ? `open` : ``}`}>\r\n          <div className=\"progress-bar-value\"></div>\r\n        </div>\r\n        <div className=\"heading-sec\">\r\n          <h1>Remove User</h1>\r\n        </div>\r\n        <p>{removeFormError?.adminError}</p>\r\n        <label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Admin Password..\"\r\n            ref={removeFormInputRef}\r\n          />\r\n          <button\r\n            className=\"material-symbols-outlined\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              handlePasswordVisibility(removeFormInputRef);\r\n            }}\r\n          >\r\n            <img\r\n              src={`/Icons/${\r\n                vissibility ? `visibility.png` : `visibility_off.png`\r\n              }`}\r\n              alt=\"\"\r\n            />\r\n          </button>\r\n        </label>\r\n        <div className=\"form-footer-sec\">\r\n          <p>{removeFormError?.serverMessage}</p>\r\n          <button type=\"submit\" className=\"submit-btn\">\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserInfoTable;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport PageLoader from \"./PageLoader\";\r\nimport Paginater from \"./Paginater\";\r\nimport \"../CSS/RechargeHistory.css\";\r\nimport \"../CSS/RetryForm.css\";\r\n\r\nfunction RechargeHistory({\r\n  reductionStatus,\r\n  setNavigation,\r\n  refreshRechargeTable,\r\n  setRefreshRechargeTable,\r\n  handleLogout,\r\n}) {\r\n  const { state } = useLocation();\r\n  const [networkError, setNetworkError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [pageData, setPageData] = useState([]);\r\n  const [totalHistoryCount, setTotalHistoryCount] = useState(null);\r\n  const [pageLimit] = useState(14);\r\n  const [presentPage, setPresentPage] = useState(1);\r\n  const [isTableLoading, setIsTableLoading] = useState(false);\r\n  const fetchPageData = async (pageNumber, totalCount) => {\r\n    try {\r\n      setIsTableLoading(true);\r\n      setNetworkError(false);\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/recharge_history?rfid=${\r\n          state?.rfid\r\n        }&pageNumber=${pageNumber}&pageLimit=${pageLimit}&reductionStatus=${\r\n          reductionStatus ? 1 : 0\r\n        }`,\r\n        {\r\n          method: \"GET\",\r\n          credentials: \"include\",\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      switch (response.status) {\r\n        case 200:\r\n          if (totalCount) {\r\n            setTotalHistoryCount(data?.historyLength);\r\n          }\r\n          setPageData(data?.history);\r\n          break;\r\n        case 401:\r\n          await handleLogout();\r\n          break;\r\n        default:\r\n          setErrorMessage(data.error + \"!\");\r\n          setNetworkError(true);\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\"oops something went wrong!\");\r\n      setNetworkError(true);\r\n    } finally {\r\n      setIsTableLoading(false);\r\n    }\r\n  };\r\n  const handleHistoryPage = (e) => {\r\n    fetchPageData(e.selected, false);\r\n    setPresentPage(e.selected + 1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (refreshRechargeTable) {\r\n      setNetworkError(false);\r\n      setTotalHistoryCount(null);\r\n      fetchPageData(0, true);\r\n      setRefreshRechargeTable(false);\r\n    }\r\n  }, [refreshRechargeTable]);\r\n\r\n  useEffect(() => {\r\n    setNavigation(2);\r\n    fetchPageData(0, true);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"recharge-table-container\">\r\n        {networkError ? (\r\n          <div className=\"retry-form\">\r\n            <p>{errorMessage}</p>\r\n            <button\r\n              onClick={() => {\r\n                fetchPageData(0, true);\r\n              }}\r\n            >\r\n              Retry\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <>\r\n            <div\r\n              className={`empty-animation-container ${\r\n                totalHistoryCount === 0 ? `` : `hide`\r\n              }`}\r\n            >\r\n              <h1>oops the table is empty!</h1>\r\n            </div>\r\n            <table\r\n              className={`${\r\n                totalHistoryCount === null || totalHistoryCount === 0\r\n                  ? `hide`\r\n                  : ``\r\n              }`}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th>SL. NO.</th>\r\n                  <th>Date</th>\r\n                  <th>Time</th>\r\n                  <th>Amount</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className={`${isTableLoading ? `hide` : ``}`}>\r\n                {pageData?.map((element, index) => {\r\n                  const date = new Date(element.date);\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{(presentPage - 1) * pageLimit + (index + 1)}</td>\r\n                      <td>{`${date.getDate()}/${\r\n                        date.getMonth() + 1\r\n                      }/${date.getFullYear()}`}</td>\r\n                      <td>{element?.time}</td>\r\n                      <td>{element?.amount}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <div\r\n              className={`table-loader-container ${\r\n                isTableLoading ? `` : `hide`\r\n              }`}\r\n            >\r\n              <PageLoader />\r\n            </div>\r\n            <div\r\n              className={`paginater-sec ${\r\n                totalHistoryCount === null || totalHistoryCount === 0\r\n                  ? `hide`\r\n                  : ``\r\n              }`}\r\n            ></div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <Paginater\r\n        totalElements={totalHistoryCount}\r\n        pageSize={pageLimit}\r\n        handlePageChange={handleHistoryPage}\r\n        isVisible={\r\n          !networkError && totalHistoryCount !== null && totalHistoryCount !== 0\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RechargeHistory;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport Paginater from \"./Paginater\";\r\nimport PageLoader from \"./PageLoader\";\r\nimport \"../CSS/ExpenseHistory.css\";\r\nimport \"../CSS/RetryForm.css\";\r\n\r\nfunction ExpenseHistory({\r\n  reductionStatus,\r\n  setNavigation,\r\n  refreshExpenseTable,\r\n  setRefreshExpenseTable,\r\n  handleLogout,\r\n}) {\r\n  const { state } = useLocation();\r\n  const [networkError, setNetworkError] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [pageData, setPageData] = useState([]);\r\n  const [totalHistoryCount, setTotalHistoryCount] = useState(null);\r\n  const [pageLimit] = useState(15);\r\n  const [presentPage, setPresentPage] = useState(1);\r\n  const [isTableLoading, setIsTableLoading] = useState(false);\r\n  const fetchPageData = async (pageNumber, totalCount) => {\r\n    try {\r\n      setIsTableLoading(true);\r\n      setNetworkError(false);\r\n      const response = await fetch(\r\n        `${process.env.REACT_APP_API_URL}/expense_history?rfid=${\r\n          state?.rfid\r\n        }&pageNumber=${pageNumber}&pageLimit=${pageLimit}&reductionStatus=${\r\n          reductionStatus ? 1 : 0\r\n        }`,\r\n        {\r\n          method: \"GET\",\r\n          credentials: \"include\",\r\n        }\r\n      );\r\n      const data = await response.json();\r\n      switch (response.status) {\r\n        case 200:\r\n          if (totalCount) {\r\n            setTotalHistoryCount(data?.historyLength);\r\n          }\r\n          setPageData(data?.history);\r\n          break;\r\n        case 401:\r\n          await handleLogout();\r\n          break;\r\n        default:\r\n          setErrorMessage(data.error + \"!\");\r\n          setNetworkError(true);\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage(\"oops something went wrong!\");\r\n      setNetworkError(true);\r\n    } finally {\r\n      setIsTableLoading(false);\r\n    }\r\n  };\r\n  const handleHistoryPage = (e) => {\r\n    fetchPageData(e.selected, false);\r\n    setPresentPage(e.selected + 1);\r\n  };\r\n  useEffect(() => {\r\n    if (refreshExpenseTable) {\r\n      setNetworkError(false);\r\n      setTotalHistoryCount(null);\r\n      fetchPageData(0, true);\r\n      setRefreshExpenseTable(false);\r\n    }\r\n  }, [refreshExpenseTable]);\r\n  useEffect(() => {\r\n    setNavigation(3);\r\n    fetchPageData(0, true);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <>\r\n      {networkError ? (\r\n        <div className=\"retry-form\">\r\n          <p>{errorMessage}</p>\r\n          <button\r\n            onClick={() => {\r\n              fetchPageData(0, true);\r\n            }}\r\n          >\r\n            Retry\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div\r\n            className={`empty-animation-container ${\r\n              totalHistoryCount === 0 ? `` : `hide`\r\n            }`}\r\n          >\r\n            <h1>oops the table is empty!</h1>\r\n          </div>\r\n          <div className=\"expense-table-container\">\r\n            <table\r\n              className={`${\r\n                totalHistoryCount === null || totalHistoryCount === 0\r\n                  ? `hide`\r\n                  : ``\r\n              }`}\r\n            >\r\n              <thead>\r\n                <tr>\r\n                  <th>SL. NO.</th>\r\n                  <th>Date</th>\r\n                  <th>Call Start Time</th>\r\n                  <th>Call End Time</th>\r\n                  <th>Reducted Amount</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className={`${isTableLoading ? `hide` : ``}`}>\r\n                {pageData?.map((element, index) => {\r\n                  const date = new Date(element.date);\r\n                  return (\r\n                    <tr key={index}>\r\n                      <td>{(presentPage - 1) * pageLimit + (index + 1)}</td>\r\n                      <td>{`${date.getDate()}/${\r\n                        date.getMonth() + 1\r\n                      }/${date.getFullYear()}`}</td>\r\n                      <td>{element?.callStartTime}</td>\r\n                      <td>{element?.callEndTime}</td>\r\n                      <td>{element?.reductedAmount}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n            <div\r\n              className={`table-loader-container ${\r\n                isTableLoading ? `` : `hide`\r\n              }`}\r\n            >\r\n              <PageLoader />\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <div\r\n        className={`paginater-sec ${\r\n          totalHistoryCount === 0 || totalHistoryCount === null ? `hide` : ``\r\n        }`}\r\n      >\r\n        <Paginater\r\n          totalElements={totalHistoryCount}\r\n          pageSize={pageLimit}\r\n          handlePageChange={handleHistoryPage}\r\n          isVisible={\r\n            !networkError &&\r\n            totalHistoryCount !== null &&\r\n            totalHistoryCount !== 0\r\n          }\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ExpenseHistory;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport \"../CSS/HomePage.css\";\r\nimport \"../CSS/ButtonLoader.css\";\r\nimport \"../CSS/HomeNotification.css\";\r\nimport \"../CSS/SideNavigation.css\";\r\nimport \"../CSS/FormLoader.css\";\r\nimport UserInfoTable from \"./UserInfoTable\";\r\nimport RechargeHistory from \"./RechargeHistory\";\r\nimport ExpenseHistory from \"./ExpenseHistory\";\r\nfunction HomePage() {\r\n  const navigate = useNavigate();\r\n  const [adminUserName, setAdminUserName] = useState(\"\");\r\n  const [reductionStatus, setReductionStatus] = useState(false);\r\n  const [isAddUserBtnClicked, setIsAddUserBtnClicked] = useState(false);\r\n  const [searchData, setSearchData] = useState([]);\r\n  const [addUserData, setAddUserData] = useState({\r\n    rfid: \"\",\r\n    name: \"\",\r\n    rollNumber: \"\",\r\n  });\r\n  const [isAddUserFormSubmited, setIsAddUserFormSubmited] = useState(false);\r\n  const [addUserFormErorr, setAddUserFormError] = useState({});\r\n  const [isAddUserFormValidated, setIsAddUserFormValidated] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState(\"\");\r\n  const [searchRefresh, setSearchRefresh] = useState(false);\r\n  const [isSearchLoading, setIsSearchLoading] = useState(false);\r\n  const [initialRefresh, setInitialRefresh] = useState(true);\r\n  const [searchInputClear, setSearchInputClear] = useState(false);\r\n  const [formLoading, setFormLoading] = useState(false);\r\n  const [isOverlay, setIsOverlay] = useState(false);\r\n  const [abortControllers, setAbortControllers] = useState([]);\r\n  const [isButtonLoading, setIsButtonLoading] = useState(false);\r\n  const [date, setDate] = useState(new Date());\r\n  const [days, setDays] = useState([]);\r\n  const [month, setMonth] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n  const [isCalender, setIsCalender] = useState(false);\r\n  const [isStartDateClicked, setIsStartDateClicked] = useState(false);\r\n  const [isMonthlyButtonClicked, setIsMonthlyButtonClicked] = useState(false);\r\n  const [isNotificationOpen, setIsNotificationOpen] = useState(false);\r\n  const [notificationError, setNotificationError] = useState(\"\");\r\n  const [downloadData, setDownloadData] = useState({\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  const [isDownloadValidted, setIsDownloadValidted] = useState(false);\r\n  const [isRehchargeDownloading, setIsRechargeDownloading] = useState(false);\r\n  const [refreshUserInfoTable, setRefreshUserInfoTable] = useState(false);\r\n  const [refreshRechargeTable, setRefreshRechargeTable] = useState(false);\r\n  const [refreshExpenseTable, setRefreshExpenseTable] = useState(false);\r\n  const [navigation, setNavigation] = useState(1);\r\n  const addUserFormRef = useRef(null);\r\n  const searchInputRef = useRef(null);\r\n  const startButtonRef = useRef(null);\r\n  const endButtonDateRef = useRef(null);\r\n  const dailyRechargeDownloadButtonRef = useRef(null);\r\n  const searchUser = async (query) => {\r\n    const specialCharacterPattern = /[!@#$%^&*()_+{}\\[\\]:;<>,.?~\\\\]/;\r\n    if (!specialCharacterPattern.test(query)) {\r\n      try {\r\n        setIsSearchLoading(true);\r\n        abortControllers.forEach((controller) => {\r\n          controller.abort();\r\n        });\r\n        const abortController = new AbortController();\r\n        setAbortControllers((controllers) => [...controllers, abortController]);\r\n        const result = await fetch(\r\n          `${process.env.REACT_APP_API_URL}/search_user?query=${query}`,\r\n          {\r\n            method: \"GET\",\r\n            signal: abortController.signal,\r\n            credentials: \"include\",\r\n          }\r\n        );\r\n        const data = await result.json();\r\n        switch (result.status) {\r\n          case 200:\r\n            setSearchData(data.users);\r\n            break;\r\n          case 401:\r\n            navigate(\"/login\");\r\n            break;\r\n          case 404:\r\n            setSearchData([]);\r\n            break;\r\n          default:\r\n            alert(data.error);\r\n        }\r\n      } catch (error) {\r\n        alert(error.message);\r\n      } finally {\r\n        setIsSearchLoading(false);\r\n        setAbortControllers([]);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleAddUser = () => {\r\n    setIsAddUserBtnClicked(true);\r\n    setIsOverlay(true);\r\n    setAddUserFormError({});\r\n    for (let i = 0; i < 3; i++) {\r\n      addUserFormRef.current[i].value = \"\";\r\n    }\r\n  };\r\n  const handleAddUserForm = (e, keyEvent) => {\r\n    if (!keyEvent) {\r\n      e.preventDefault();\r\n    }\r\n    setIsAddUserFormValidated(false);\r\n    setAddUserFormError({});\r\n    if (!keyEvent) {\r\n      setAddUserData({\r\n        rfid: e.target[0].value,\r\n        name: e.target[1].value,\r\n        rollNumber: e.target[2].value,\r\n      });\r\n    } else {\r\n      setAddUserData({\r\n        rfid: addUserFormRef.current[0].value,\r\n        name: addUserFormRef.current[1].value,\r\n        rollNumber: addUserFormRef.current[2].value,\r\n      });\r\n    }\r\n    setIsAddUserFormSubmited(true);\r\n  };\r\n  const addUserFormValidater = () => {\r\n    const error = {};\r\n    if (!addUserData.rfid) {\r\n      error.rfidError = \"RFID Required\";\r\n    }\r\n    if (!addUserData.name) {\r\n      error.nameError = \"Student Name Required\";\r\n    }\r\n    if (!addUserData.rollNumber) {\r\n      error.rollNumberError = \"Studnet Roll Number Required\";\r\n    }\r\n    setAddUserFormError(error);\r\n    return true;\r\n  };\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Escape\" && !formLoading && !isRehchargeDownloading) {\r\n      setIsAddUserBtnClicked(false);\r\n      setIsOverlay(false);\r\n      setIsMonthlyButtonClicked(false);\r\n      setIsCalender(false);\r\n      setIsNotificationOpen(false);\r\n    }\r\n  };\r\n  const handleOverlay = () => {\r\n    if (!formLoading && !isRehchargeDownloading) {\r\n      setIsAddUserBtnClicked(false);\r\n      setIsOverlay(false);\r\n      setIsMonthlyButtonClicked(false);\r\n      setIsCalender(false);\r\n      setIsNotificationOpen(false);\r\n    }\r\n  };\r\n  const handleRefresh = (e) => {\r\n    e.preventDefault();\r\n    setAddUserFormError({});\r\n    for (let i = 0; i < 3; i++) {\r\n      addUserFormRef.current[i].value = \"\";\r\n    }\r\n  };\r\n  const handleLogout = async () => {\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL}/logout`, {\r\n        method: \"GET\",\r\n        credentials: \"include\",\r\n      });\r\n      if (response.status === 200) {\r\n        navigate(\"/logout\");\r\n      } else if (response.status === 401) {\r\n        navigate(\"/logout\");\r\n      } else {\r\n        alert(\"cookie is not cleared!\");\r\n        navigate(\"/logout\");\r\n      }\r\n    } catch (error) {\r\n      alert(\"cookie is not cleared!\");\r\n      navigate(\"/logout\");\r\n    }\r\n    navigate(\"/login\");\r\n  };\r\n  const handleEnterKey = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      if (isAddUserBtnClicked) handleAddUserForm(addUserFormRef.current, true);\r\n    }\r\n  };\r\n  const closeNotification = () => {\r\n    setIsNotificationOpen(false);\r\n    setIsCalender(false);\r\n  };\r\n  const handleDailyRechargeDownload = async () => {\r\n    const currentDate = new Date();\r\n    const button = dailyRechargeDownloadButtonRef.current;\r\n    const startDate = `${currentDate.getDate()}/${\r\n      currentDate.getMonth() + 1\r\n    }/${currentDate.getFullYear()}`;\r\n    const nextDay = new Date(currentDate);\r\n    nextDay.setDate(currentDate.getDate() + 1);\r\n    const endDate = `${nextDay.getDate()}/${\r\n      nextDay.getMonth() + 1\r\n    }/${nextDay.getFullYear()}`;\r\n    try {\r\n      setIsButtonLoading(true);\r\n      button.disabled = true;\r\n      const result = await fetch(\r\n        `${\r\n          process.env.REACT_APP_API_URL\r\n        }/download_recharge_history?reductionStatus=${\r\n          reductionStatus ? 1 : 0\r\n        }&startDate=${startDate}&endDate=${endDate}`,\r\n        {\r\n          method: \"GET\",\r\n          credentials: \"include\",\r\n          headers: {\r\n            Accept: \"application/pdf\",\r\n          },\r\n        }\r\n      );\r\n      switch (result.status) {\r\n        case 200:\r\n          const blob = await result.blob();\r\n          const url = window.URL.createObjectURL(blob);\r\n          const a = document.createElement(\"a\");\r\n          a.href = url;\r\n          a.download = \"recharge.pdf\";\r\n          a.click();\r\n          a.remove();\r\n          window.URL.revokeObjectURL(url);\r\n          break;\r\n        case 401:\r\n          navigate(\"/login\");\r\n          break;\r\n        default:\r\n          const data = await result.json();\r\n          alert(data.error);\r\n      }\r\n    } catch (error) {\r\n      alert(error.message);\r\n    } finally {\r\n      setIsButtonLoading(false);\r\n      button.disabled = false;\r\n    }\r\n  };\r\n  const handleMonthChange = (state) => {\r\n    const currentDate = date;\r\n    const days = [];\r\n    currentDate.setMonth(\r\n      state ? currentDate.getMonth() + 1 : currentDate.getMonth() - 1\r\n    );\r\n    const lastDay = new Date(\r\n      currentDate.getFullYear(),\r\n      currentDate.getMonth() + 1,\r\n      0\r\n    );\r\n    for (let day = 1; day <= lastDay.getDate(); day++) {\r\n      days.push(day);\r\n    }\r\n    setDays(days);\r\n    setDate(currentDate);\r\n    setMonth(currentDate.getMonth() + 1);\r\n    setYear(currentDate.getFullYear());\r\n  };\r\n  const handleDateClick = (dateState) => {\r\n    const currentDate = date;\r\n    const days = [];\r\n    const lastDay = new Date(\r\n      currentDate.getFullYear(),\r\n      currentDate.getMonth() + 1,\r\n      0\r\n    );\r\n    for (let day = 1; day <= lastDay.getDate(); day++) {\r\n      days.push(day);\r\n    }\r\n    setDays(days);\r\n    setMonth(currentDate.getMonth() + 1);\r\n    setYear(currentDate.getFullYear());\r\n\r\n    if (dateState) {\r\n      setIsStartDateClicked(true);\r\n    } else {\r\n      setIsStartDateClicked(false);\r\n    }\r\n    setIsCalender(!isCalender);\r\n  };\r\n  const handleDayClick = (index) => {\r\n    if (isStartDateClicked) {\r\n      setDownloadData({ startDate: `${index}/${month}/${year}`, endDate: \"\" });\r\n      startButtonRef.current.textContent = `Start Date: ${index}/${month}/${year}`;\r\n    } else {\r\n      if (!downloadData.startDate) {\r\n        setNotificationError(\"Please select start date first\");\r\n        setIsNotificationOpen(true);\r\n        return;\r\n      }\r\n      setDownloadData({\r\n        startDate: downloadData.startDate,\r\n        endDate: `${index}/${month}/${year}`,\r\n      });\r\n      const startDateArray = downloadData.startDate.split(\"/\");\r\n      const startDate = new Date(\r\n        startDateArray[2],\r\n        startDateArray[1] - 1,\r\n        startDateArray[0]\r\n      );\r\n      const endDate = new Date(year, month - 1, index);\r\n      if (+startDate >= +endDate) {\r\n        setNotificationError(\"End date should be greaterthan start date\");\r\n        setIsNotificationOpen(true);\r\n        return;\r\n      }\r\n      setNotificationError(\"\");\r\n      setIsNotificationOpen(false);\r\n      setDownloadData({\r\n        startDate: downloadData.startDate,\r\n        endDate: `${index}/${month}/${year}`,\r\n      });\r\n      endButtonDateRef.current.textContent = `End Date: ${index}/${month}/${year}`;\r\n    }\r\n    setIsCalender(false);\r\n  };\r\n  const handleMonthlyRechargeDownload = () => {\r\n    setIsNotificationOpen(false);\r\n    if (!downloadData.startDate) {\r\n      setNotificationError(\"Start date is required\");\r\n      setIsNotificationOpen(true);\r\n      return;\r\n    }\r\n    if (!downloadData.endDate) {\r\n      setNotificationError(\"End date is required\");\r\n      setIsNotificationOpen(true);\r\n      return;\r\n    }\r\n    if (!notificationError) {\r\n      setIsDownloadValidted(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const response = await fetch(\r\n          `${process.env.REACT_APP_API_URL}/validate`,\r\n          {\r\n            method: \"GET\",\r\n            credentials: \"include\",\r\n          }\r\n        );\r\n        const data = await response.json();\r\n        switch (response.status) {\r\n          case 200:\r\n            setAdminUserName(data.admin);\r\n            setReductionStatus(data.reduction);\r\n            break;\r\n          default:\r\n            navigate(\"/login\");\r\n        }\r\n      } catch (error) {\r\n        alert(error.message);\r\n      }\r\n    })();\r\n  }, []);\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleEnterKey);\r\n    return () => window.removeEventListener(\"keydown\", handleEnterKey);\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (searchQuery) {\r\n      searchUser(searchQuery);\r\n      setSearchRefresh(false);\r\n      setInitialRefresh(false);\r\n    } else {\r\n      setSearchRefresh(true);\r\n    }\r\n  }, [searchQuery]);\r\n  useEffect(() => {\r\n    if (searchInputClear) {\r\n      searchInputRef.current.value = \"\";\r\n      setSearchInputClear(false);\r\n    }\r\n  }, [searchInputClear]);\r\n  useEffect(() => {\r\n    if (isAddUserFormSubmited) {\r\n      setIsAddUserFormValidated(addUserFormValidater());\r\n      setIsAddUserFormSubmited(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isAddUserFormSubmited]);\r\n  useEffect(() => {\r\n    if (isAddUserFormValidated && Object.keys(addUserFormErorr).length === 0) {\r\n      (async () => {\r\n        try {\r\n          setFormLoading(true);\r\n          const result = await fetch(\r\n            `${process.env.REACT_APP_API_URL}/add_user`,\r\n            {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              credentials: \"include\",\r\n              body: JSON.stringify(addUserData),\r\n            }\r\n          );\r\n          const data = await result.json();\r\n          switch (result.status) {\r\n            case 201:\r\n              setAddUserFormError({ serverMessage: data.message });\r\n              break;\r\n            case 401:\r\n              await handleLogout();\r\n              break;\r\n            case 409:\r\n              setAddUserFormError({ rfidError: data.error });\r\n              break;\r\n            default:\r\n              setAddUserFormError({ serverMessage: data.error });\r\n          }\r\n        } catch (error) {\r\n          alert(error.message);\r\n        } finally {\r\n          setFormLoading(false);\r\n        }\r\n      })();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isAddUserFormValidated]);\r\n  useEffect(() => {\r\n    document.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      document.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  });\r\n  useEffect(() => {\r\n    if (isDownloadValidted) {\r\n      (async () => {\r\n        try {\r\n          setIsRechargeDownloading(true);\r\n          const result = await fetch(\r\n            `${\r\n              process.env.REACT_APP_API_URL\r\n            }/download_recharge_history?reductionStatus=${\r\n              reductionStatus ? 1 : 0\r\n            }&startDate=${downloadData.startDate}&endDate=${\r\n              downloadData.endDate\r\n            }`,\r\n            {\r\n              method: \"GET\",\r\n              credentials: \"include\",\r\n              headers: {\r\n                Accept: \"application/pdf\",\r\n              },\r\n            }\r\n          );\r\n\r\n          switch (result.status) {\r\n            case 200:\r\n              const blob = await result.blob();\r\n              const url = window.URL.createObjectURL(blob);\r\n              const a = document.createElement(\"a\");\r\n              a.href = url;\r\n              a.download = \"recharge.pdf\";\r\n              a.click();\r\n              a.remove();\r\n              window.URL.revokeObjectURL(url);\r\n              break;\r\n            case 401:\r\n              await handleLogout();\r\n              break;\r\n            case 500:\r\n              const data = await result.json();\r\n              setIsNotificationOpen(true);\r\n              setNotificationError(data.error);\r\n          }\r\n        } catch (error) {\r\n          alert(error.message);\r\n        } finally {\r\n          setIsDownloadValidted(false);\r\n          setIsRechargeDownloading(false);\r\n          setIsMonthlyButtonClicked(false);\r\n          setIsOverlay(false);\r\n        }\r\n      })();\r\n    }\r\n  }, [isDownloadValidted]);\r\n  return (\r\n    <>\r\n      <div\r\n        className={`overlay ${isOverlay ? `open` : ``}`}\r\n        onClick={handleOverlay}\r\n      ></div>\r\n      <div className=\"home-page-container\">\r\n        <div\r\n          className={`home-notification ${isNotificationOpen ? `show` : ``}`}\r\n        >\r\n          <p>{notificationError}</p>\r\n          <button onClick={closeNotification}>\r\n            <img src=\"/Icons/close.png\" alt=\"\" />\r\n          </button>\r\n        </div>\r\n        <nav>\r\n          <div className=\"logo-sec\">\r\n            <img src=\"/vsense.png\" alt=\"\" />\r\n          </div>\r\n          <div className=\"heading-sec\">\r\n            <h1>TELEPHONE TRANSACTION MANAGEMENT SYSTEM</h1>\r\n            <h3>For Secure Data And Management</h3>\r\n          </div>\r\n          <div className=\"search-bar-sec\">\r\n            <div className=\"search-bar\">\r\n              <input\r\n                ref={searchInputRef}\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                onChange={(e) => {\r\n                  setSearchQuery(e.target.value);\r\n                }}\r\n              />\r\n              <button>Search</button>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <div className=\"side-nvigation-sec\">\r\n          <button\r\n            className={`${navigation === 1 ? `selected` : ``}`}\r\n            onClick={() => {\r\n              setSearchRefresh(true);\r\n              setSearchInputClear(true);\r\n              navigate(\"/\");\r\n            }}\r\n          >\r\n            <img src=\"/Icons/home.png\" alt=\"\" />\r\n          </button>\r\n          <button className={`${navigation !== 1 ? `selected` : ``}`}>\r\n            <img src=\"/Icons/history.png\" alt=\"\" />\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              setSearchRefresh(true);\r\n              setSearchInputClear(true);\r\n              switch (navigation) {\r\n                case 1:\r\n                  setRefreshUserInfoTable(true);\r\n                  break;\r\n                case 2:\r\n                  setRefreshRechargeTable(true);\r\n                  break;\r\n                case 3:\r\n                  setRefreshExpenseTable(true);\r\n              }\r\n            }}\r\n          >\r\n            <img src=\"/Icons/refresh_black.png\" alt=\"\" />\r\n          </button>\r\n        </div>\r\n        <div className=\"user-table-sec\">\r\n          <Routes>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              element={\r\n                <UserInfoTable\r\n                  adminUserName={adminUserName}\r\n                  reductionStatus={reductionStatus}\r\n                  isSearchLoading={isSearchLoading}\r\n                  searchData={searchData}\r\n                  searchRefresh={searchRefresh}\r\n                  initialRefresh={initialRefresh}\r\n                  inputClear={setSearchInputClear}\r\n                  isOverlay={isOverlay}\r\n                  setIsOverlay={setIsOverlay}\r\n                  setNavigation={setNavigation}\r\n                  refreshUserInfoTable={refreshUserInfoTable}\r\n                  setRefreshUserInfoTable={setRefreshUserInfoTable}\r\n                  handleLogout={handleLogout}\r\n                />\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/recharge_history\"\r\n              element={\r\n                <RechargeHistory\r\n                  reductionStatus={reductionStatus}\r\n                  setNavigation={setNavigation}\r\n                  refreshRechargeTable={refreshRechargeTable}\r\n                  setRefreshRechargeTable={setRefreshRechargeTable}\r\n                  handleLogout={handleLogout}\r\n                />\r\n              }\r\n            />\r\n            <Route\r\n              path=\"/expense_history\"\r\n              element={\r\n                <ExpenseHistory\r\n                  reductionStatus={reductionStatus}\r\n                  setNavigation={setNavigation}\r\n                  refreshExpenseTable={refreshExpenseTable}\r\n                  setRefreshExpenseTable={setRefreshExpenseTable}\r\n                  handleLogout={handleLogout}\r\n                />\r\n              }\r\n            />\r\n          </Routes>\r\n        </div>\r\n        <div className=\"footer-sec\">\r\n          <button\r\n            className={`daily-history-btn button-loading`}\r\n            onClick={handleDailyRechargeDownload}\r\n            ref={dailyRechargeDownloadButtonRef}\r\n          >\r\n            Daily Recharge History\r\n            <div\r\n              className=\"button_loader-container\"\r\n              style={{ opacity: `${isButtonLoading ? `1` : `0`}` }}\r\n            >\r\n              <div className=\"button_any-element button_animation button_is_loading\"></div>\r\n            </div>\r\n            <img\r\n              src=\"/Icons/download.png\"\r\n              alt=\"\"\r\n              style={{ opacity: `${isButtonLoading ? `0` : `1`}` }}\r\n            />\r\n          </button>\r\n          <button\r\n            className=\"monthly-history-btn\"\r\n            onClick={() => {\r\n              setDate(new Date());\r\n              startButtonRef.current.textContent = \"Select Start Date\";\r\n              endButtonDateRef.current.textContent = \"Select End Date\";\r\n              setDownloadData({ startDate: \"\", endDate: \"\" });\r\n              setIsMonthlyButtonClicked(true);\r\n              setIsOverlay(true);\r\n            }}\r\n          >\r\n            Recharge History\r\n            <img src=\"/Icons/download.png\" alt=\"\" />\r\n          </button>\r\n          <button onClick={handleAddUser} className=\"add-user-btn\">\r\n            Add New User\r\n            <img src=\"/Icons/add.png\" alt=\"\" />\r\n          </button>\r\n          <button onClick={handleLogout} className=\"logout-btn\">\r\n            Logout\r\n            <img src=\"/Icons/logout.png\" alt=\"\" />\r\n          </button>\r\n        </div>\r\n        <form\r\n          className={`add-user-form ${isAddUserBtnClicked ? `open` : ``}`}\r\n          onSubmit={handleAddUserForm}\r\n          ref={addUserFormRef}\r\n        >\r\n          <div className={`form-overlay ${formLoading ? `open` : ``}`}></div>\r\n          <div className={`progress-bar ${formLoading ? `open` : ``}`}>\r\n            <div className=\"progress-bar-value\"></div>\r\n          </div>\r\n          <div className=\"heading-sec\">\r\n            <h1>Add New User</h1>\r\n          </div>\r\n          <p>{addUserFormErorr.rfidError}</p>\r\n          <input type=\"text\" placeholder=\"RFID\" />\r\n          <p>{addUserFormErorr.nameError}</p>\r\n          <input type=\"text\" placeholder=\"Full Name\" />\r\n          <p>{addUserFormErorr.rollNumberError}</p>\r\n          <input type=\"text\" placeholder=\"RollNumber\" />\r\n          <div className=\"form-footer-sec\">\r\n            <p\r\n              style={{\r\n                color: `${\r\n                  addUserFormErorr.serverMessage === \"successfull\"\r\n                    ? `green`\r\n                    : `red`\r\n                }`,\r\n              }}\r\n            >\r\n              {addUserFormErorr?.serverMessage}\r\n            </p>\r\n            <div className=\"btn-sec\">\r\n              <button\r\n                className=\"material-symbols-outlined refresh-btn\"\r\n                onClick={handleRefresh}\r\n              >\r\n                <img src=\"/Icons/refresh.png\" alt=\"\" />\r\n              </button>\r\n              <button type=\"submit\" className=\"submit-btn\">\r\n                Submit\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n        <div\r\n          className={`recharge-download-form ${\r\n            isMonthlyButtonClicked ? `show` : ``\r\n          }`}\r\n        >\r\n          <div\r\n            className={`form-overlay ${isRehchargeDownloading ? `open` : ``}`}\r\n          ></div>\r\n          <div\r\n            className={`progress-bar ${isRehchargeDownloading ? `open` : ``}`}\r\n          >\r\n            <div className=\"progress-bar-value\"></div>\r\n          </div>\r\n          <h1>Recharge History</h1>\r\n          <button\r\n            onClick={() => {\r\n              handleDateClick(true);\r\n            }}\r\n            ref={startButtonRef}\r\n          >\r\n            Select Start Date\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              handleDateClick(false);\r\n            }}\r\n            ref={endButtonDateRef}\r\n          >\r\n            Select End Date\r\n          </button>\r\n          <button onClick={handleMonthlyRechargeDownload}>\r\n            Download\r\n            <img src=\"/Icons/download.png\" alt=\"\" />\r\n          </button>\r\n          <div className={`calender-container ${isCalender ? `show` : ``}`}>\r\n            <div className=\"calender-header\">\r\n              <button\r\n                onClick={() => {\r\n                  handleMonthChange(false);\r\n                }}\r\n              >\r\n                <img src=\"/Icons/prev.png\" alt=\"\" />\r\n              </button>\r\n              <h1>{`${month}-${year}`}</h1>\r\n              <button\r\n                onClick={() => {\r\n                  handleMonthChange(true);\r\n                }}\r\n              >\r\n                <img src=\"/Icons/next.png\" alt=\"\" />\r\n              </button>\r\n            </div>\r\n            <div className=\"calender-days-container\">\r\n              {days.map((day, index) => (\r\n                <div\r\n                  key={index}\r\n                  onClick={() => {\r\n                    handleDayClick(index + 1);\r\n                  }}\r\n                >\r\n                  {day}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n"],"names":["_ref","totalElements","pageSize","handlePageChange","isVisible","isMedia","setIsMedia","useState","handleMediaScreen","window","innerWidth","useEffect","addEventListener","removeEventListener","_jsx","_Fragment","children","ReactPaginate","previousLabel","nextLabel","breakLabel","pageCount","Math","ceil","marginPagesDisplayed","pageRangeDisplayed","onPageChange","containerClassName","concat","activeClassName","pageClassName","pageLinkClassName","previousClassName","nextClassName","previousLinkClassName","nextLinkClassName","abortControllers","adminUserName","isSearchLoading","searchData","searchRefresh","initialRefresh","inputClear","isOverlay","setIsOverlay","reductionStatus","setNavigation","refreshUserInfoTable","setRefreshUserInfoTable","handleLogout","navigate","useNavigate","isTableLoading","setIsTableLoading","networkError","setNetworkError","errorMessage","setErrorMessage","pageData","setPageData","presentPage","setPresentPage","totalUsers","setTotalUsers","isEditClicked","setIsEditClicked","isRemoveClicked","setIsRemoveClicked","editName","setEditName","editRfid","setEditRfid","editRollNumber","setEditRollNumber","editIndex","setEditIndex","editData","setEditData","admin","rfid","name","rollNumber","password","isEditSubmited","setIsEditSubmited","isEditValidated","setIsEditValidated","editError","setEditError","removeFormData","setRemoveFormData","isRemoveSubmited","setIsRemoveSubmited","isRemoveFormValidated","setIsRemoveFormValidated","removeFormError","setRemoveFormError","removeRfid","setRemoveRfid","vissibility","setVissibility","formLoading","setFormLoading","editFormRef","useRef","removeFormRef","removeFormInputRef","editPasswordRef","fetchPageData","async","pageNumber","totalCount","forEach","signal","abort","abortController","AbortController","push","response","fetch","process","credentials","data","json","status","users","error","alert","message","length","handleEditForm","e","keyEvent","preventDefault","current","value","target","handleEditInput","handleRemoveForm","handlePasswordVisibility","elementRef","type","handleEnterKey","key","Object","keys","_id","method","headers","body","JSON","stringify","serverMessage","editValidater","rfidError","nameError","rollNumberError","adminError","removeFormValidater","_jsxs","className","onClick","map","user","index","style","textTransform","balance","_pageData$index","_pageData$index2","_pageData$index3","handleEdit","src","alt","handleRemove","state","PageLoader","Paginater","selected","onSubmit","ref","onChange","placeholder","refreshRechargeTable","setRefreshRechargeTable","useLocation","totalHistoryCount","setTotalHistoryCount","pageLimit","historyLength","history","element","date","Date","getDate","getMonth","getFullYear","time","amount","refreshExpenseTable","setRefreshExpenseTable","callStartTime","callEndTime","reductedAmount","setAdminUserName","setReductionStatus","isAddUserBtnClicked","setIsAddUserBtnClicked","setSearchData","addUserData","setAddUserData","isAddUserFormSubmited","setIsAddUserFormSubmited","addUserFormErorr","setAddUserFormError","isAddUserFormValidated","setIsAddUserFormValidated","searchQuery","setSearchQuery","setSearchRefresh","setIsSearchLoading","setInitialRefresh","searchInputClear","setSearchInputClear","setAbortControllers","isButtonLoading","setIsButtonLoading","setDate","days","setDays","month","setMonth","year","setYear","isCalender","setIsCalender","isStartDateClicked","setIsStartDateClicked","isMonthlyButtonClicked","setIsMonthlyButtonClicked","isNotificationOpen","setIsNotificationOpen","notificationError","setNotificationError","downloadData","setDownloadData","startDate","endDate","isDownloadValidted","setIsDownloadValidted","isRehchargeDownloading","setIsRechargeDownloading","navigation","addUserFormRef","searchInputRef","startButtonRef","endButtonDateRef","dailyRechargeDownloadButtonRef","handleAddUserForm","handleKeyDown","handleMonthChange","currentDate","lastDay","day","handleDateClick","dateState","reduction","test","query","controller","controllers","result","searchUser","addUserFormValidater","document","Accept","blob","url","URL","createObjectURL","a","createElement","href","download","click","remove","revokeObjectURL","handleOverlay","closeNotification","Routes","Route","exact","path","UserInfoTable","RechargeHistory","ExpenseHistory","button","nextDay","disabled","opacity","textContent","handleAddUser","i","color","handleMonthlyRechargeDownload","startDateArray","split","handleDayClick"],"sourceRoot":""}