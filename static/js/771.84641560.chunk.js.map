{"version":3,"file":"static/js/771.84641560.chunk.js","mappings":"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","sources":["Components/AdminLogin.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"../CSS/AdminLogin.css\";\r\nimport \"../CSS/FormLoader.css\";\r\n\r\nfunction AdminLogin() {\r\n  const navigate = useNavigate();\r\n  const [isLoginFormSubmitted, setIsLoginFormSubmited] = useState(false);\r\n  const [loginData, setLoginData] = useState({ userName: \"\", password: \"\" });\r\n  const [isLoginValidated, setIsLoginValidated] = useState(false);\r\n  const [loginFormError, setLoginFormError] = useState({});\r\n  const [visibility, setVisibility] = useState(false);\r\n  const [formLoading, setFormLoading] = useState(false);\r\n  const [notification, setNotification] = useState({ state: false, text: \"\" });\r\n  const editPasswordRef = useRef(null);\r\n  const loginFormRef = useRef(null);\r\n  const handleLoginForm = (e, keyEvent) => {\r\n    if (!keyEvent) {\r\n      e.preventDefault();\r\n    }\r\n    setIsLoginValidated(false);\r\n    setLoginFormError({});\r\n    if (!keyEvent) {\r\n      setLoginData({\r\n        userName: e.target[0].value,\r\n        password: e.target[1].value,\r\n      });\r\n    } else {\r\n      setLoginData({\r\n        userName: loginFormRef.current[0].value,\r\n        password: loginFormRef.current[1].value,\r\n      });\r\n    }\r\n\r\n    setIsLoginFormSubmited(true);\r\n  };\r\n\r\n  const handlePasswordVisibility = (e) => {\r\n    e.preventDefault();\r\n    setVisibility(!visibility);\r\n    editPasswordRef.current.type = visibility ? `password` : `text`;\r\n  };\r\n  const handleEnterKey = (e) => {\r\n    if (e.key === \"Enter\") {\r\n      handleLoginForm(loginFormRef.current, true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleEnterKey);\r\n    return () => window.removeEventListener(\"keydown\", handleEnterKey);\r\n  });\r\n  useEffect(() => {\r\n    const loginFormValidater = () => {\r\n      const error = {};\r\n      if (!loginData.userName) {\r\n        error.userNameError = \"User Name Required\";\r\n      }\r\n      if (!loginData.password) {\r\n        error.passwordError = \"Password Required\";\r\n      }\r\n      setLoginFormError(error);\r\n      return true;\r\n    };\r\n    if (isLoginFormSubmitted) {\r\n      setIsLoginValidated(loginFormValidater());\r\n      setIsLoginFormSubmited(false);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isLoginFormSubmitted]);\r\n  useEffect(() => {\r\n    if (isLoginValidated && Object.keys(loginFormError).length === 0) {\r\n      (async () => {\r\n        try {\r\n          setFormLoading(true);\r\n          const loginResult = await fetch(\r\n            `${process.env.REACT_APP_ADMIN_LOGIN_URL}/login`,\r\n            {\r\n              method: \"POST\",\r\n              headers: { \"Content-Type\": \"application/json\" },\r\n              credentials: \"include\",\r\n              body: JSON.stringify(loginData),\r\n            }\r\n          );\r\n          const data = await loginResult.json();\r\n          switch (loginResult.status) {\r\n            case 200:\r\n              navigate(\"/\");\r\n              break;\r\n            default:\r\n              setNotification({\r\n                state: true,\r\n                text: data.error,\r\n              });\r\n          }\r\n        } catch (error) {\r\n          alert(error.message);\r\n        } finally {\r\n          setFormLoading(false);\r\n        }\r\n      })();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [isLoginValidated]);\r\n  return (\r\n    <>\r\n      <div className=\"login-container\">\r\n        <div\r\n          className={`error-notification  ${notification.state ? `show` : ``}`}\r\n        >\r\n          <p>{notification.text}</p>\r\n          <button\r\n            onClick={() => {\r\n              setNotification({ state: false, text: \"\" });\r\n            }}\r\n          >\r\n            <img src=\"/Icons/close.png\" alt=\"\" />\r\n          </button>\r\n        </div>\r\n        <form onSubmit={handleLoginForm} ref={loginFormRef}>\r\n          <div className={`form-overlay ${formLoading ? `open` : ``}`}></div>\r\n          <div className={`progress-bar ${formLoading ? `open` : ``}`}>\r\n            <div className=\"progress-bar-value\"></div>\r\n          </div>\r\n          <div className=\"heading-sec\">\r\n            <h1>Admin Login</h1>\r\n          </div>\r\n          <p>{loginFormError?.userNameError}</p>\r\n          <input type=\"text\" placeholder=\"User Name\" />\r\n          <p>{loginFormError?.passwordError}</p>\r\n          <label>\r\n            <input\r\n              ref={editPasswordRef}\r\n              type=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n            <button\r\n              className=\"material-symbols-outlined\"\r\n              onClick={handlePasswordVisibility}\r\n            >\r\n              <img\r\n                src={`/Icons/${\r\n                  visibility ? `visibility.png` : `visibility_off.png`\r\n                }`}\r\n                alt=\"\"\r\n              />\r\n            </button>\r\n          </label>\r\n          <div className=\"form-footer-sec\">\r\n            <p>Forgot Password ?</p>\r\n            <button type=\"submit\">Login</button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AdminLogin;\r\n"],"names":["navigate","useNavigate","isLoginFormSubmitted","setIsLoginFormSubmited","useState","loginData","setLoginData","userName","password","isLoginValidated","setIsLoginValidated","loginFormError","setLoginFormError","visibility","setVisibility","formLoading","setFormLoading","notification","setNotification","state","text","editPasswordRef","useRef","loginFormRef","handleLoginForm","e","keyEvent","preventDefault","current","value","target","handleEnterKey","key","useEffect","window","addEventListener","removeEventListener","loginFormValidater","error","userNameError","passwordError","Object","keys","length","loginResult","fetch","concat","process","method","headers","credentials","body","JSON","stringify","data","json","status","alert","message","_jsx","_Fragment","children","_jsxs","className","onClick","src","alt","onSubmit","ref","type","placeholder"],"sourceRoot":""}